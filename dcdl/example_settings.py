"""
Django settings for dcdl project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path

# set config denoting whether this is dev, test, or prod
APP_INSTANCE = "prod" 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

LOGGING = {
    'version': 1,
    
    'disable_existing_loggers': False,

    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'root-verbose': {
            'format': '{levelname} {asctime} {module} root {message}',
            'style': '{',
        }
    },
    'handlers': {
        # this one logs to console
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        # this one logs to file
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': f'/data/data/user/django_user/{APP_INSTANCE}/logs/info.log',
            'formatter': 'verbose'
        },
        # this one uses the root verbose handler for root logging
        'root-file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': f'/data/data/user/django_user/{APP_INSTANCE}/logs/info.log',
            'formatter': 'root-verbose'
        }, 
        # this one doesn't directly email admin: it dumps to a file, then
        # there's a cron job watching for changes to the file that sends the
        # email. This avoids disclosure risk if error contains T13 info.
        'mail_admin': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': f'/data/data/user/django_user/{APP_INSTANCE}/logs/error.log',
            'formatter': 'verbose'
        }
    },
    
    'root': {
        'handlers': ['file', 'mail_admin'],
        'level': 'INFO',
    },

    'loggers': {
        'django': {
            'handlers': ['file', 'mail_admin'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'WARNING'),
            'propagate': True,
        },
    }
}


ALLOWED_HOSTS = [
    'localhost',
    '127.7.0.0.1',
]


# Application definition

INSTALLED_APPS = [
    'EntryApp.apps.EntryappConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'mod_wsgi.server',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dcdl.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dcdl.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'dcdl_prod', 
        'USER': 'django_user',                      # Not used with sqlite3.
        'PASSWORD':'', # ADD PASSWORD HERE Not used with sqlite3.
        'HOST': 'localhost',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '5432',                      # Set to empty string for default. Not used with sqlite3.
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'EST'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# 
LOGIN_REDIRECT_URL = '/EntryApp/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

MEDIA_URL = '/images/' # this is the thing to change
MEDIA_ROOT = '/data/storage/images/'

STATICFILES_DIRS = (
    # os.path.join(BASE_DIR, 'boot'), 
    '/data/data/user/django_user/prod/static/',
)

# globals for loading data
FORM_FIELDS_CSV = os.path.join(Path(__file__).parent.parent.absolute(), 'form_fields.csv')
IMAGE_DIR = '/data/storage/images/'
USER_INFO = os.path.join(Path(__file__).parent.parent.absolute(), 'user_info.csv')
DEFAULT_REEL_LOAD_SPEC = 'prod_reel_load_spec.csv'
